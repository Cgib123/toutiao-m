{"remainingRequest":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\src\\views\\home\\components\\channel-edit.vue?vue&type=style&index=0&id=22a12457&scoped=true&lang=less&","dependencies":[{"path":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\src\\views\\home\\components\\channel-edit.vue","mtime":1614751162000},{"path":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cgib\\Desktop\\vue-project\\toutiao-m\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY2hhbm5lbC1lZGl0IHsNCiAgcGFkZGluZzogODVweCAwOw0KDQogIC50aXRsZS10ZXh0IHsNCiAgICBmb250LXNpemU6IDMycHg7DQogICAgY29sb3I6ICMzMzM7DQogIH0NCg0KICAuZWRpdC1idG4gew0KICAgIHdpZHRoOiAxMDRweDsNCiAgICBoZWlnaHQ6IDQ4cHg7DQogICAgZm9udC1zaXplOiAyNnB4Ow0KICAgIGNvbG9yOiAjZjg1OTU5Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNmODU5NTk7DQogIH0NCg0KICAvZGVlcC8uZ3JpZC1pdGVtIHsNCiAgICB3aWR0aDogMTYwcHg7DQogICAgaGVpZ2h0OiA4NnB4Ow0KICAgIC52YW4tZ3JpZC1pdGVtX19jb250ZW50IHsNCiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7DQogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNWY2Ow0KICAgICAgLnZhbi1ncmlkLWl0ZW1fX3RleHQsDQogICAgICAudGV4dCB7DQogICAgICAgIGZvbnQtc2l6ZTogMjhweDsNCiAgICAgICAgY29sb3I6ICMyMjI7DQogICAgICAgIG1hcmdpbi10b3A6IDA7DQogICAgICB9DQogICAgICAuYWN0aXZlIHsNCiAgICAgICAgY29sb3I6IHJlZDsNCiAgICAgIH0NCiAgICAgIC52YW4tZ3JpZC1pdGVtX19pY29uLXdyYXBwZXIgew0KICAgICAgICBwb3NpdGlvbjogdW5zZXQ7DQogICAgICB9DQogICAgfQ0KICB9DQoNCiAgL2RlZXAvLm15LWdyaWQgew0KICAgIC5ncmlkLWl0ZW0gew0KICAgICAgLnZhbi1pY29uLWNsZWFyIHsNCiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICByaWdodDogLTEwcHg7DQogICAgICAgIHRvcDogLTEwcHg7DQogICAgICAgIGZvbnQtc2l6ZTogMzBweDsNCiAgICAgICAgY29sb3I6ICNjYWNhY2E7DQogICAgICAgIHotaW5kZXg6IDI7DQogICAgICB9DQogICAgfQ0KICB9DQoNCiAgL2RlZXAvLnJlY29tbWVuZC1ncmlkIHsNCiAgICAuZ3JpZC1pdGVtIHsNCiAgICAgIC52YW4tZ3JpZC1pdGVtX19jb250ZW50IHsNCiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICAgICAgLnZhbi1pY29uLXBsdXMgew0KICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDsNCiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDZweDsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["channel-edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"channel-edit.vue","sourceRoot":"src/views/home/components","sourcesContent":["<template>\r\n  <div class=\"channel-edit\">\r\n    <van-cell :border=\"false\">\r\n      <div slot=\"title\" class=\"title-text\">我的频道</div>\r\n      <van-button\r\n        class=\"edit-btn\"\r\n        type=\"danger\"\r\n        plain\r\n        round\r\n        size=\"mini\"\r\n        @click=\"isEdit = !isEdit\"\r\n        >{{ isEdit ? \"完成\" : \"编辑\" }}</van-button\r\n      >\r\n    </van-cell>\r\n    <van-grid class=\"my-grid\" :gutter=\"10\">\r\n      <van-grid-item\r\n        class=\"grid-item\"\r\n        v-for=\"(channel, index) in myChannels\"\r\n        :key=\"index\"\r\n        @click=\"onMyChannelClick(channel, index)\"\r\n      >\r\n        <!--   v-bind:class语法\r\n      一个对象，对象中的key 表示要作用的css类名\r\n      对象中的value要计算出布尔值\r\n      true，则作用该类名\r\n      false，不作用类名 -->\r\n        <van-icon\r\n          v-show=\"isEdit && !fiexdChannels.includes(channel.id)\"\r\n          name=\"clear\"\r\n          slot=\"icon\"\r\n        >\r\n        </van-icon>\r\n        <span class=\"text\" :class=\"{ active: index === active }\" slot=\"text\">\r\n          {{ channel.name }}\r\n        </span>\r\n      </van-grid-item>\r\n    </van-grid>\r\n\r\n    <!-- 频道推荐 -->\r\n    <van-cell :border=\"false\">\r\n      <div slot=\"title\" class=\"title-text\">频道推荐</div>\r\n    </van-cell>\r\n    <van-grid class=\"recommend-grid\" :gutter=\"10\">\r\n      <van-grid-item\r\n        class=\"grid-item\"\r\n        v-for=\"(channel, index) in recommendChannels\"\r\n        :key=\"index\"\r\n        icon=\"plus\"\r\n        :text=\"channel.name\"\r\n        @click=\"onAddChannel(channel)\"\r\n      />\r\n    </van-grid>\r\n    <!-- 频道推荐 -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAllChannels,\r\n  addUserChannel,\r\n  deleteUserChannel\r\n} from '@/api/channel'\r\n// vuex的映射方法，把容器映射到当前组件中，获取当前用户登陆状态\r\nimport { mapState } from 'vuex'\r\nimport { setItem } from '@/utils/storage'\r\nexport default {\r\n  name: 'ChannelEdit',\r\n  components: {},\r\n  props: {\r\n    myChannels: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    // 接收数据\r\n    active: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      allChannels: [], // 所有的频道\r\n      isEdit: false, // 我的频道关闭按钮\r\n      fiexdChannels: [0]\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['user']),\r\n    // 推荐频道计算属性\r\n    // 计算属性 会观测内部依赖数据的变化\r\n    // 若数据变化 则计算属性会重新执行\r\n    recommendChannels () {\r\n      return this.allChannels.filter(channel => {\r\n        return !this.myChannels.find(myChannel => {\r\n          return myChannel.id === channel.id\r\n        })\r\n      })\r\n    }\r\n\r\n    /*  recommendChannels () {\r\n       const channels = []\r\n       this.allChannels.forEach(channel => {\r\n         // find 遍历数组， 找到满足条件的元素项\r\n         const ret = this.myChannels.find(myChannel => {\r\n           return myChannel.id === channel.id\r\n         })\r\n         // 如果我的频道不包括该频道，则收集到推荐频道中\r\n         if (!ret) {\r\n           channels.push(channel)\r\n         }\r\n       })\r\n       return channels\r\n     } */\r\n  },\r\n  watch: {},\r\n  // 在created中请求调用\r\n  created () {\r\n    this.loadAllChannels()\r\n  },\r\n  mounted () { },\r\n  methods: {\r\n    // 发送请求\r\n    async loadAllChannels () {\r\n      try {\r\n        const { data } = await getAllChannels()\r\n        this.allChannels = data.data.channels\r\n      } catch (err) {\r\n        this.$toast('数据请求失败')\r\n      }\r\n    },\r\n    async onAddChannel (channel) {\r\n      this.myChannels.push(channel)\r\n\r\n      // 数据持久化处理\r\n      if (this.user) {\r\n        try {\r\n          // 登录状态  把数据请求接口放到线上\r\n          await addUserChannel([{\r\n            id: channel.id, // 频道ID\r\n            seq: this.myChannels.length // 序号\r\n          }])\r\n        } catch (err) {\r\n          this.$toast('保存失败，请稍后重试 ')\r\n        }\r\n      } else {\r\n        // 未登录状态 把数据存储到本地\r\n        setItem('TOUTIAO_CHANNELS', this.myChannels)\r\n      }\r\n    },\r\n    onMyChannelClick (channel, index) {\r\n      if (this.isEdit) {\r\n        // 1.如果是固定频道则,不删除\r\n        if (this.fiexdChannels.includes(channel.id)) {\r\n          return\r\n        }\r\n        // 2.删除频道项\r\n        this.myChannels.splice(index, 1)\r\n\r\n        // 3. 删除频道是激活项之前的\r\n        // 编辑状态 删除频道 isEdit=true\r\n        // 参数一：要删除的索引\r\n        // 参数二：要删除的个数，不指定则删除到最后\r\n        if (index <= this.acindextive) {\r\n          // 让激活的索引-1\r\n          this.$emit('update-active', this.active - 1, true)\r\n        }\r\n        // 4.持久化处理\r\n        this.deleteChannel(channel)\r\n      } else {\r\n        // 非编辑状态 切换频道  isEdit=false\r\n        // 给父组件发送一个自定义事件\r\n        this.$emit('update-active', index, false)\r\n      }\r\n    },\r\n\r\n    async deleteChannel (channel) {\r\n      try {\r\n        if (this.user) {\r\n          // 已登录 将数据更新到线上\r\n          await deleteUserChannel(channel.id)\r\n        } else {\r\n          // 未登录 将数据更新到本地\r\n          setItem('TOUTIAO_CHANNELS', this.myChannels)\r\n        }\r\n      } catch (err) {\r\n        this.$toast('操作失败，请稍后重试')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang='less'>\r\n.channel-edit {\r\n  padding: 85px 0;\r\n\r\n  .title-text {\r\n    font-size: 32px;\r\n    color: #333;\r\n  }\r\n\r\n  .edit-btn {\r\n    width: 104px;\r\n    height: 48px;\r\n    font-size: 26px;\r\n    color: #f85959;\r\n    border: 1px solid #f85959;\r\n  }\r\n\r\n  /deep/.grid-item {\r\n    width: 160px;\r\n    height: 86px;\r\n    .van-grid-item__content {\r\n      white-space: nowrap;\r\n      background-color: #f4f5f6;\r\n      .van-grid-item__text,\r\n      .text {\r\n        font-size: 28px;\r\n        color: #222;\r\n        margin-top: 0;\r\n      }\r\n      .active {\r\n        color: red;\r\n      }\r\n      .van-grid-item__icon-wrapper {\r\n        position: unset;\r\n      }\r\n    }\r\n  }\r\n\r\n  /deep/.my-grid {\r\n    .grid-item {\r\n      .van-icon-clear {\r\n        position: absolute;\r\n        right: -10px;\r\n        top: -10px;\r\n        font-size: 30px;\r\n        color: #cacaca;\r\n        z-index: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  /deep/.recommend-grid {\r\n    .grid-item {\r\n      .van-grid-item__content {\r\n        flex-direction: row;\r\n        .van-icon-plus {\r\n          font-size: 28px;\r\n          margin-right: 6px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}