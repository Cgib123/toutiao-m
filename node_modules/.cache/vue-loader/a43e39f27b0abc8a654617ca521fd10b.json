{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\toutiao-m\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\toutiao-m\\src\\views\\home\\components\\article-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\toutiao-m\\src\\views\\home\\components\\article-list.vue","mtime":1614572299557},{"path":"C:\\Users\\Administrator\\Desktop\\toutiao-m\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\toutiao-m\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\toutiao-m\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\toutiao-m\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyDliqDovb3nu4Tku7YNCmltcG9ydCB7IGdldEFydGljbGVzIH0gZnJvbSAnQC9hcGkvYXJ0aWNsZScNCmltcG9ydCBBcnRpY2xlSXRlbSBmcm9tICdAL2NvbXBvbmVudHMvYXJ0aWNsZS1pdGVtJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIC8vIOazqOWGjOe7hOS7tg0KICBuYW1lOiAnQXJ0aWNsZUxpc3QnLA0KICBjb21wb25lbnRzOiB7DQogICAgLy8g5rOo5YaMDQogICAgQXJ0aWNsZUl0ZW0NCiAgfSwNCiAgcHJvcHM6IHsNCiAgICBjaGFubmVsOiB7DQogICAgICB0eXBlOiBPYmplY3QsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0NCiAgfSwNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxpc3Q6IFtdLCAvLyBsaXN0W10g5a2Y5YKo5YiX6KGo5pWw5o2u55qE5pWw57uEDQogICAgICBsb2FkaW5nOiBmYWxzZSwgLy8g5o6n5Yi25Yqg6L295LitIGxvYWRpbmfnirbmgIENCiAgICAgIGZpbmlzaGVkOiBmYWxzZSwgLy8g5o6n5Yi25pWw5o2u5Yqg6L2957uT5p2f55qE54q25oCB77yM5Li6dHJ1ZeaXtu+8jOS4jeWGjeinpuWPkeWKoOi9veabtOWkmg0KICAgICAgdGltZXN0YW1wOiBudWxsLCAvLyDor7fmsYLojrflj5bkuIvkuIDpobXmlbDmja7nmoTml7bpl7TmiLMNCiAgICAgIGVycm9yOiBmYWxzZSwgLy8g5YiX6KGo5Yqg6L295aSx6LSl55qE5o+Q56S654q25oCBDQogICAgICBpc1JlZnJlc2hMb2FkaW5nOiBmYWxzZSwgLy8g5o6n5Yi25LiL5ouJ5Yi35paw55qEbG9hZGluZ+eKtuaAgQ0KICAgICAgcmVmcmVzaFN1Y2Nlc3NUZXh0OiAnJyAvLyDkuIvmi4nliLfmlrDmiJDmnpzmj5DnpLrmlofmnKwNCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7fSwNCiAgd2F0Y2g6IHt9LA0KICBjcmVhdGVkICgpIHsgfSwNCiAgbW91bnRlZCAoKSB7IH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBvbkxvYWQgKCkgew0KICAgICAgdHJ5IHsNCiAgICAgICAgLy8gMS7or7fmsYLojrflj5bmlbDmja4NCiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXRBcnRpY2xlcyh7DQogICAgICAgICAgY2hhbm5lbF9pZDogdGhpcy5jaGFubmVsLmlkLCAvLyDpopHpgZNJRA0KICAgICAgICAgIC8vIHRpbWVzdGFtcCDor7fmsYLmlbDmja7nmoTpobXnoIENCiAgICAgICAgICAvLyDor7fmsYLnrKzkuIDpobXnmoTmlbDmja7vvJog5b2T5YmN5pyA5paw5pe26Ze05oizIERhdGUubm93KCkNCiAgICAgICAgICAvLyDnlKjkuo7or7fmsYLkuYvlkI7mlbDmja7nmoTml7bpl7TmiLPvvIzkvJrlnKjlvZPliY3or7fmsYLnmoTnu5PmnpzkuK3ov5Tlm57nu5nkvaANCiAgICAgICAgICB0aW1lc3RhbXA6IHRoaXMudGltZXN0YW1wIHx8IERhdGUubm93KCksDQogICAgICAgICAgd2l0aF90b3A6IDEgLy8g5piv5ZCm5YyF5ZCr572u6aG277yM6L+b5YWl6aG16Z2i56ys5LiA5qyh6K+35rGC5pe26KaB5YyF5ZCr572u6aG2DQogICAgICAgIH0pDQogICAgICAgIC8qIC8vIOaooeaLn+maj+WNs+Wksei0peeahOaDheWGtQ0KICAgICAgICBpZihNYXRoLnJhbmRvbSgpID4gMC41KSB7DQogICAgICAgICAgSlNPTi5wYXJzZSgnZGVzbmFqbmRqc2EnKQ0KICAgICAgICB9ICovDQogICAgICAgIC8vIDIu5oqK6K+35rGC57uT5p6c5pWw5o2u5pS+5YiwIGxpc3Qg5pWw57uE5LitDQogICAgICAgIGNvbnN0IHsgcmVzdWx0cyB9ID0gZGF0YS5kYXRhDQogICAgICAgIC8vIC4uLuaVsOe7hOeahOWxleW8gOaTjeS9nOespu+8jOS8muaKiuaVsOe7hOS4gOS4quS4gOS4quWxleW8gCDmi7/lh7rmnaUsPWxpc3RbMF0sbGlzdFsxXQ0KICAgICAgICB0aGlzLmxpc3QucHVzaCguLi5yZXN1bHRzKQ0KDQogICAgICAgIC8vIDMu5pys5qyh5pWw5o2u5Yqg6L2957uT5p2f5LmL5ZCO77yM6KaB5oqK5Yqg6L2954q25oCB6K6+572u5Li657uT5p2fDQogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlDQogICAgICAgIC8vIDQu5Yik5pat5pWw5o2u5piv5ZCm5YWo6YOo5Yqg6L295a6M5oiQDQogICAgICAgIGlmIChyZXN1bHRzLmxlbmd0aCkgew0KICAgICAgICAgIC8vIOabtOaWsOiOt+WPluS4i+S4gOmhteaVsOaNrueahOaXtumXtOaIsw0KICAgICAgICAgIHRoaXMudGltZXN0YW1wID0gZGF0YS5kYXRhLnByZV90aW1lc3RhbXANCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAvLyDlpoLmnpzmsqHmnInmlbDmja7kuobvvIzlsIZmaW5pc2hlZD10cnVl77yM5LiN5YaNbG9hZOWKoOi9veabtOWkmg0KICAgICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlDQogICAgICAgIH0NCiAgICAgIH0gY2F0Y2ggKGVycikgew0KICAgICAgICAvLyDlsZXnpLrplJnor6/mj5DnpLrnirbmgIENCiAgICAgICAgdGhpcy5lcnJvciA9IHRydWUNCiAgICAgICAgLy8g6K+35rGC5aSx6LSlIGxvYWRpbmfkuZ/pnIDopoHlhbPpl60NCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOW9k+S4i+aLieWIt+aWsOeahCDml7blgJnkvJrop6blj5HosIPnlKjor6Xlh73mlbANCiAgICBhc3luYyBvblJlZnJlc2ggKCkgew0KICAgICAgdHJ5IHsNCiAgICAgICAgLy8gMS7or7fmsYLojrflj5bmlbDmja4NCiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXRBcnRpY2xlcyh7DQogICAgICAgICAgY2hhbm5lbF9pZDogdGhpcy5jaGFubmVsLmlkLCAvLyDpopHpgZNJRA0KICAgICAgICAgIC8vIHRpbWVzdGFtcCDor7fmsYLmlbDmja7nmoTpobXnoIENCiAgICAgICAgICAvLyDor7fmsYLlvZPliY3mnIDmlrDml7bpl7TmiLMgRGF0ZS5ub3coKQ0KICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSwNCiAgICAgICAgICB3aXRoX3RvcDogMSAvLyDmmK/lkKbljIXlkKvnva7pobbvvIzov5vlhaXpobXpnaLnrKzkuIDmrKHor7fmsYLml7bopoHljIXlkKvnva7pobYNCiAgICAgICAgfSkNCiAgICAgICAgLyogICAgIC8vIOaooeaLn+maj+WNs+Wksei0peeahOaDheWGtQ0KICAgICAgICAgICAgaWYgKE1hdGgucmFuZG9tKCkgPiAwLjUpIHsNCiAgICAgICAgICAgICAgSlNPTi5wYXJzZSgnZGVzbmFqbmRqc2EnKQ0KICAgICAgICAgICAgfSAqLw0KICAgICAgICAvLyAyLuWwhuaVsOaNrui/veWKoOWIl+ihqOeahOmhtumDqA0KICAgICAgICBjb25zdCB7IHJlc3VsdHMgfSA9IGRhdGEuZGF0YQ0KICAgICAgICB0aGlzLmxpc3QudW5zaGlmdCguLi5yZXN1bHRzKQ0KICAgICAgICAvLyAzLuWFs+mXreS4i+aLieWIt+aWsOeahGxvYWRpbmfnirbmgIENCiAgICAgICAgdGhpcy5pc1JlZnJlc2hMb2FkaW5nID0gZmFsc2UNCiAgICAgICAgLy8g5pu05paw5LiL5ouJ5Yi35paw5oiQ5Yqf5o+Q56S65paH5pysDQogICAgICAgIHRoaXMucmVmcmVzaFN1Y2Nlc3NUZXh0ID0gYOWIt+aWsOaIkOWKn++8jOabtOaWsOS6hiR7cmVzdWx0cy5sZW5ndGh95p2h5pWw5o2uYA0KICAgICAgfSBjYXRjaCAoZXJyKSB7DQogICAgICAgIHRoaXMuaXNSZWZyZXNoTG9hZGluZyA9IGZhbHNlDQogICAgICAgIHRoaXMucmVmcmVzaFN1Y2Nlc3NUZXh0ID0gJ+WIt+aWsOWksei0pScNCiAgICAgIH0NCiAgICB9DQogICAgLyogICAgIG9uTG9hZCAoKSB7DQogICAgICAgICAgLy8g5byC5q2l5pu05paw5pWw5o2uDQogICAgICAgICAgLy8gMS7or7fmsYLojrflj5bmlbDmja4NCiAgICAgICAgICAvLyBzZXRUaW1lb3V0IOS7heWBmuekuuS+i++8jOecn+WunuWcuuaZr+S4reS4gOiIrOS4uiBhamF4IOivt+axgg0KICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgLy8gMi7mioror7fmsYLnu5PmnpzmlbDmja7mlL7liLAgbGlzdCDmlbDnu4TkuK0NCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykgew0KICAgICAgICAgICAgICB0aGlzLmxpc3QucHVzaCh0aGlzLmxpc3QubGVuZ3RoICsgMSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIC8vIDMu5pys5qyh5pWw5o2u5Yqg6L2957uT5p2f5LmL5ZCO77yM6KaB5oqK5Yqg6L2954q25oCB6K6+572u5Li657uT5p2fDQogICAgICAgICAgICAvLyBsb2FkaW5nIOWFs+mXreS7peWQjuaJjeiDveinpuWPkeS4i+S4gOasoeeahOWKoOi9veabtOWkmg0KICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICAgIC8vIDQu5Yik5pat5pWw5o2u5piv5ZCm5YWo6YOo5Yqg6L295a6M5oiQDQogICAgICAgICAgICBpZiAodGhpcy5saXN0Lmxlbmd0aCA+PSA0MCkgew0KICAgICAgICAgICAgICAvLyDlpoLmnpzmsqHmnInmlbDmja7kuobmiopmaW5pc2hlZOiuvue9ruS4unRydWXvvIzkuYvlkI7kuI3lho3op6blj5HliqDovb3mm7TlpJoNCiAgICAgICAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LCAxMDAwKQ0KICAgICAgICB9ICovDQogIH0NCn0NCg=="},{"version":3,"sources":["article-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"article-list.vue","sourceRoot":"src/views/home/components","sourcesContent":["<template>\r\n  <div class=\"article-list\">\r\n    <van-pull-refresh\r\n      v-model=\"isRefreshLoading\"\r\n      :success-text=\"refreshSuccessText\"\r\n      :success-duration=\"1500\"\r\n      @refresh=\"onRefresh\"\r\n    >\r\n      <van-list\r\n        v-model=\"loading\"\r\n        :finished=\"finished\"\r\n        finished-text=\"没有更多了\"\r\n        :error.sync=\"error\"\r\n        error-text=\"请求失败，点击重新加载\"\r\n        @load=\"onLoad\"\r\n      >\r\n        <!-- 遍历文章列表项 -->\r\n        <article-item\r\n          v-for=\"(article, index) in list\"\r\n          :key=\"index\"\r\n          :article=\"article\"\r\n        />\r\n        <!-- <van-cell\r\n          v-for=\"(article, index) in list\"\r\n          :key=\"index\"\r\n          :title=\"article.title\"\r\n        /> -->\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 加载组件\r\nimport { getArticles } from '@/api/article'\r\nimport ArticleItem from '@/components/article-item'\r\n\r\nexport default {\r\n  // 注册组件\r\n  name: 'ArticleList',\r\n  components: {\r\n    // 注册\r\n    ArticleItem\r\n  },\r\n  props: {\r\n    channel: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      list: [], // list[] 存储列表数据的数组\r\n      loading: false, // 控制加载中 loading状态\r\n      finished: false, // 控制数据加载结束的状态，为true时，不再触发加载更多\r\n      timestamp: null, // 请求获取下一页数据的时间戳\r\n      error: false, // 列表加载失败的提示状态\r\n      isRefreshLoading: false, // 控制下拉刷新的loading状态\r\n      refreshSuccessText: '' // 下拉刷新成果提示文本\r\n    }\r\n  },\r\n  computed: {},\r\n  watch: {},\r\n  created () { },\r\n  mounted () { },\r\n  methods: {\r\n    async onLoad () {\r\n      try {\r\n        // 1.请求获取数据\r\n        const { data } = await getArticles({\r\n          channel_id: this.channel.id, // 频道ID\r\n          // timestamp 请求数据的页码\r\n          // 请求第一页的数据： 当前最新时间戳 Date.now()\r\n          // 用于请求之后数据的时间戳，会在当前请求的结果中返回给你\r\n          timestamp: this.timestamp || Date.now(),\r\n          with_top: 1 // 是否包含置顶，进入页面第一次请求时要包含置顶\r\n        })\r\n        /* // 模拟随即失败的情况\r\n        if(Math.random() > 0.5) {\r\n          JSON.parse('desnajndjsa')\r\n        } */\r\n        // 2.把请求结果数据放到 list 数组中\r\n        const { results } = data.data\r\n        // ...数组的展开操作符，会把数组一个一个展开 拿出来,=list[0],list[1]\r\n        this.list.push(...results)\r\n\r\n        // 3.本次数据加载结束之后，要把加载状态设置为结束\r\n        this.loading = false\r\n        // 4.判断数据是否全部加载完成\r\n        if (results.length) {\r\n          // 更新获取下一页数据的时间戳\r\n          this.timestamp = data.data.pre_timestamp\r\n        } else {\r\n          // 如果没有数据了，将finished=true，不再load加载更多\r\n          this.finished = true\r\n        }\r\n      } catch (err) {\r\n        // 展示错误提示状态\r\n        this.error = true\r\n        // 请求失败 loading也需要关闭\r\n        this.loading = false\r\n      }\r\n    },\r\n    // 当下拉刷新的 时候会触发调用该函数\r\n    async onRefresh () {\r\n      try {\r\n        // 1.请求获取数据\r\n        const { data } = await getArticles({\r\n          channel_id: this.channel.id, // 频道ID\r\n          // timestamp 请求数据的页码\r\n          // 请求当前最新时间戳 Date.now()\r\n          timestamp: Date.now(),\r\n          with_top: 1 // 是否包含置顶，进入页面第一次请求时要包含置顶\r\n        })\r\n        /*     // 模拟随即失败的情况\r\n            if (Math.random() > 0.5) {\r\n              JSON.parse('desnajndjsa')\r\n            } */\r\n        // 2.将数据追加列表的顶部\r\n        const { results } = data.data\r\n        this.list.unshift(...results)\r\n        // 3.关闭下拉刷新的loading状态\r\n        this.isRefreshLoading = false\r\n        // 更新下拉刷新成功提示文本\r\n        this.refreshSuccessText = `刷新成功，更新了${results.length}条数据`\r\n      } catch (err) {\r\n        this.isRefreshLoading = false\r\n        this.refreshSuccessText = '刷新失败'\r\n      }\r\n    }\r\n    /*     onLoad () {\r\n          // 异步更新数据\r\n          // 1.请求获取数据\r\n          // setTimeout 仅做示例，真实场景中一般为 ajax 请求\r\n          setTimeout(() => {\r\n            // 2.把请求结果数据放到 list 数组中\r\n            for (let i = 0; i < 10; i++) {\r\n              this.list.push(this.list.length + 1)\r\n            }\r\n            // 3.本次数据加载结束之后，要把加载状态设置为结束\r\n            // loading 关闭以后才能触发下一次的加载更多\r\n            this.loading = false\r\n            // 4.判断数据是否全部加载完成\r\n            if (this.list.length >= 40) {\r\n              // 如果没有数据了把finished设置为true，之后不再触发加载更多\r\n              this.finished = true\r\n            }\r\n          }, 1000)\r\n        } */\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.article-list {\r\n  // 记住列表的滚动位置\r\n  height: 79vh;\r\n  overflow-y: auto; // 没有的话列表就没办法滚动了\r\n}\r\n</style>\r\n"]}]}